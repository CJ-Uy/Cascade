// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username     String         @unique
  password     String
  email        String?        @unique
  imageLink    String?
  businessUnit BusinessUnit[]
  requisitions Requisition[]

  active Boolean @default(true) // Set to false if the account should be closed/locked
}

model BusinessUnit {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  roles       Role[]
  Requisition Requisition[]

  requisitionTemplate Json
  approvalSystem      Json
  users               User[]
}

model Role {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name           String
  businessUnit   BusinessUnit? @relation(fields: [businessUnitId], references: [id])
  businessUnitId String?
}

model Requisition {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  initiator      User         @relation(fields: [userId], references: [id])
  userId         String
  fromBU         BusinessUnit @relation(fields: [businessUnitId], references: [id])
  businessUnitId String

  approvals Json
  values    Json
}
